/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TouristAttraction as PrismaTouristAttraction,
} from "@prisma/client";

export class TouristAttractionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TouristAttractionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.touristAttraction.count(args);
  }

  async touristAttractions(
    args: Prisma.TouristAttractionFindManyArgs
  ): Promise<PrismaTouristAttraction[]> {
    return this.prisma.touristAttraction.findMany(args);
  }
  async touristAttraction(
    args: Prisma.TouristAttractionFindUniqueArgs
  ): Promise<PrismaTouristAttraction | null> {
    return this.prisma.touristAttraction.findUnique(args);
  }
  async createTouristAttraction(
    args: Prisma.TouristAttractionCreateArgs
  ): Promise<PrismaTouristAttraction> {
    return this.prisma.touristAttraction.create(args);
  }
  async updateTouristAttraction(
    args: Prisma.TouristAttractionUpdateArgs
  ): Promise<PrismaTouristAttraction> {
    return this.prisma.touristAttraction.update(args);
  }
  async deleteTouristAttraction(
    args: Prisma.TouristAttractionDeleteArgs
  ): Promise<PrismaTouristAttraction> {
    return this.prisma.touristAttraction.delete(args);
  }
}
